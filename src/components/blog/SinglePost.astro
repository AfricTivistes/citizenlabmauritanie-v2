---
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import { findImage } from '~/utils/images';

import PostTags from '~/components/blog/Tags.astro';
import SocialShare from '~/components/common/SocialShare.astro';

import { getPermalink } from '~/utils/permalinks';
import { getFormattedDate } from '~/utils/utils';

import type { Post } from '~/types';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const datePost = Date.parse(post.date);
const currentPath = Astro.url.href;
const image = await findImage(post.featuredImage?.node?.sourceUrl);
---

<section class="py-8 sm:py-16 lg:py-20 mx-auto">
  <article>
    <header class={image ? '' : ''}>
      <div class="flex justify-between flex-col sm:flex-row max-w-3xl mx-auto mt-0 mb-2 px-4 sm:px-6 sm:items-center">
        <p>
          <Icon name="tabler:clock" class="w-4 h-4 inline-block -mt-0.5 dark:text-gray-400" />
          <time datetime={String(post.date)}>{getFormattedDate(datePost)}</time>
            {' '}
                ·{' '}
          { post.categories?.nodes.map(category => {
                    return (
                      <a class='capitalize hover:underline' href={category.permalink}>{category.name}</a>)
                })}
          {post.readingTime && <> · {post.readingTime} min read</>}
        </p>
      </div>
      <h1
        class="px-4 sm:px-6 max-w-3xl mx-auto text-4xl md:text-5xl font-bold leading-tighter tracking-tighter font-heading"
      >
        {post.title}
      </h1>

      {
        image ? (
          <Image
            src={image}
            class="max-w-full mt-7 lg:max-w-6xl mx-auto mb-6 sm:rounded-md bg-gray-400 dark:bg-slate-700"
            widths={[400, 900]}
            sizes="(max-width: 900px) 400px, 900px"
            alt={post.description || ''}
            aspectRatio="auto"
            loading="eager"
            width={720}
            height={720}
            loading="eager"
            decoding="async"
          />
        ) : (
          <div class="max-w-3xl mx-auto px-4 sm:px-6">
            <div class="border-t dark:border-slate-700" />
          </div>
        )
      }
    </header>
    <div
      class="mx-auto px-6 sm:px-6 max-w-3xl prose prose-lg lg:prose-xl dark:prose-invert dark:prose-headings:text-slate-300 prose-md prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold prose-a:text-primary dark:prose-a:text-green-400 prose-img:rounded-md prose-img:shadow-lg mt-8"
    >
      {
        post.Content ? (
          <>
            {/* @ts-ignore */}
            <post.Content />
          </>
        ) : (
          <Fragment set:html={post.content} />
        )
      }
    </div>
    <div class="mx-auto px-6 sm:px-6 max-w-3xl mt-8 flex justify-between flex-col sm:flex-row">
      <PostTags tags={post.terms?.nodes.map(tag => tag.slug)} class="mr-5" />
      <SocialShare url={currentPath} text={post.title} class="mt-5 sm:mt-1 align-middle text-gray-500 dark:text-slate-600" />
    </div>
  </article>
</section>
